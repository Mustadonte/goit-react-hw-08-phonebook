{"version":3,"file":"static/js/287.10e051a4.chunk.js","mappings":"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","sources":["hooks/useForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/Form.module.css?312a","components/ContactForm/ContactForm.jsx","redux/Contacts/Contact-list/contact-list-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/contactsPage.jsx"],"sourcesContent":["import { useState } from 'react';\n// import { customAlphabet } from 'nanoid';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n  // const nanoid = customAlphabet('1234567890', 5);\n  // const id = nanoid();\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => ({\n      ...prevState,\n      // id: Number(id),\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__uexYC\",\"label\":\"Form_label__sM61P\",\"input\":\"Form_input__y8btT\",\"button\":\"Form_button__8bmIn\"};","import useForm from 'hooks/useForm';\nimport css from './Form.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/Contacts/Contact-list/contacts-operations';\n\nexport const ContactForm = () => {\n  const initialState = {\n    name: '',\n    number: '',\n  };\n  const onSubmit = data => {\n    dispatch(addContact(data));\n  };\n  const dispatch = useDispatch();\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={state.name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={state.number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","export const getFilteredContacts = ({ contacts: { items }, filter }) => {\n  const normalizedText = filter.toLowerCase();\n  return items.filter(item =>\n    item.name.toLocaleLowerCase().includes(normalizedText)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListItem_listItem__upGA2\",\"button\":\"ContactListItem_button__SG6H2\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ id, name, number, onDeleteBtn }) => {\n  return (\n    <li key={id} className={css.listItem}>\n      {name}: {number}{' '}\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => onDeleteBtn(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteBtn: PropTypes.func.isRequired,\n};\n","import { getFilteredContacts } from 'redux/Contacts/Contact-list/';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from '../../redux/Contacts/Contact-list/contacts-operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id} // To remove warning from Console.\n          id={id}\n          name={name}\n          number={number}\n          onDeleteBtn={() => dispatch(removeContact(id))}\n        />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilter } from 'redux/Contacts/Filter/';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={css.label}>\n      Поиск контактов\n      <input\n        type=\"text\"\n        value={filter}\n        className={css.input}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList';\nimport { Filter } from '../components/Filter';\nimport { Loader } from '../components/Loader';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/Contacts/Contact-list/contacts-operations';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const pending = useSelector(store => store.contacts.isLoading);\n  return (\n    <main>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Search contact</h2>\n      <Filter />\n      <ContactList />\n      {pending && <Loader />}\n    </main>\n  );\n};\n"],"names":["initialState","onSubmit","useState","state","setState","handleChange","target","name","value","prevState","handleSubmit","e","preventDefault","ContactForm","dispatch","useDispatch","useForm","number","data","addContact","className","css","type","pattern","title","onChange","required","getFilteredContacts","items","contacts","normalizedText","filter","toLowerCase","item","toLocaleLowerCase","includes","ContactListItem","id","onDeleteBtn","onClick","ContactList","useSelector","map","removeContact","Filter","getFilter","setFilter","ContactsPage","useEffect","fetchContacts","pending","store","isLoading","Loader"],"sourceRoot":""}
{"version":3,"file":"static/js/210.06e81618.chunk.js","mappings":"6MACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAmI,6B,oECS/HA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaI,QAAQD,WAC5BE,SAAUL,EAAAA,KAAaM,IAAI,GAAGC,IAAI,IAAIJ,aAGlCK,EAAe,CACnBN,KAAM,GACNE,MAAO,GACPC,SAAU,IAGCI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAShB,OACE,SAAC,KAAD,CACEC,cAAeN,EACfO,iBAAkBhB,EAClBiB,SAZiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAIH,GACZP,GAASW,EAAAA,EAAAA,IAAOJ,IAChBC,IACIN,GACD,MAIH,UAKE,UAAC,KAAD,CAAMU,aAAa,MAAMC,UAAWC,EAApC,WACE,mBAAOC,QAAQ,OAAOF,UAAWC,EAAjC,kBAEE,SAAC,KAAD,CACEtB,KAAK,OACLwB,KAAK,OACLC,YAAY,kBACZJ,UAAWC,KAEb,SAAC,KAAD,CACEtB,KAAK,OACL0B,OAAQ,SAAAC,GACNC,EAAAA,GAAAA,MAAA,UAAeD,WAKrB,mBAAOJ,QAAQ,QAAQF,UAAWC,EAAlC,mBAEE,SAAC,KAAD,CACEtB,KAAK,QACLwB,KAAK,QACLC,YAAY,oBACZJ,UAAWC,KAEb,SAAC,KAAD,CACEtB,KAAK,QACL0B,OAAQ,SAAAC,GACNC,EAAAA,GAAAA,MAAA,UAAeD,WAKrB,mBAAOJ,QAAQ,WAAWF,UAAWC,EAArC,sBAEE,SAAC,KAAD,CACEtB,KAAK,WACLwB,KAAK,WACLC,YAAY,sBACZJ,UAAWC,KAEb,SAAC,KAAD,CACEtB,KAAK,WACL0B,OAAQ,SAAAC,GACNC,EAAAA,GAAAA,MAAA,UAAeD,WAKrB,mBAAQH,KAAK,SAASH,UAAWC,EAAjC,2BCtFKO,EAAe,WAC1B,OACE,2BACE,SAACtB,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/registerPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"button\":\"RegisterForm_button__B3hFq\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport css from './RegisterForm.module.css';\nimport * as yup from 'yup';\n\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { signup } from 'redux/Auth/auth-operations';\nimport useAuth from 'hooks/useAuth';\nimport { Navigate } from 'react-router-dom';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(6).max(32).required(),\n});\n\nconst initialValue = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isLogin = useAuth();\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    dispatch(signup(values));\n    resetForm();\n    if (isLogin) {\n      <Navigate to=\"/contacts\" />;\n    }\n  };\n  return (\n    <Formik\n      initialValues={initialValue}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\" className={css.form}>\n        <label htmlFor=\"name\" className={css.label}>\n          Name\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            className={css.input}\n          />\n          <ErrorMessage\n            name=\"name\"\n            render={msg => {\n              toast.error(`${msg}`);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"email\" className={css.label}>\n          Email\n          <Field\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter your e-mail\"\n            className={css.input}\n          />\n          <ErrorMessage\n            name=\"email\"\n            render={msg => {\n              toast.error(`${msg}`);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"password\" className={css.label}>\n          Password\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            className={css.input}\n          />\n          <ErrorMessage\n            name=\"password\"\n            render={msg => {\n              toast.error(`${msg}`);\n            }}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.button}>\n          Sign Up\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport const RegisterPage = () => {\n  return (\n    <main>\n      <RegisterForm />\n    </main>\n  );\n};\n"],"names":["schema","yup","shape","name","required","email","password","min","max","initialValue","RegisterForm","dispatch","useDispatch","isLogin","useAuth","initialValues","validationSchema","onSubmit","values","resetForm","console","log","signup","autoComplete","className","css","htmlFor","type","placeholder","render","msg","toast","RegisterPage"],"sourceRoot":""}